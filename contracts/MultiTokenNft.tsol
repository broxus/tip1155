pragma ever-solidity >= 0.62.0;

pragma AbiHeader expire;
pragma AbiHeader time;
pragma AbiHeader pubkey;

import "./abstract/MultiTokenNftBase.tsol";

contract MultiTokenNft is MultiTokenNftBase {
    constructor(
        address _initialOwner,
        address _remainingGasTo,
        uint128 _remainOnNft,
        string _initialJson,
        TvmCell _initialIndexCode,
        TvmCell _initialWalletCode,
        TvmCell _initialPlatformCode,
        uint128 _totalSupply,
        string _name,
        string _symbol
    ) Nft (
        _initialOwner,
        _remainingGasTo,
        _remainOnNft,
        _initialJson,
        MultiTokenGas.INDEX_DEPLOY_VALUE,
        MultiTokenGas.INDEX_DESTROY_VALUE,
        _initialIndexCode
    ) public {
        // TIP-1155
        _walletPlatformCode = _initialPlatformCode;
        _supportedInterfaces[
            bytes4(0x4371d8ed) ^    // TIP-3.1
            bytes4(0x0b1fd263) ^    // TIP-3.2
            bytes4(0x78084f7e) ^    // TIP-4.1
            bytes4(0x24d7d5f5)      // TIP-4.2
        ] = true;   // TIP-1155

        // TIP-3
        name_ = _name;
        symbol_ = _symbol;
        decimals_ = 0;

        rootOwner_ = _collection;
        walletCode_ = _initialWalletCode;
        totalSupply_ = _totalSupply;
        burnByRootDisabled_ = false;

        _supportedInterfaces[bytes4(0x4371d8ed)] = true;    // TIP-3.1
        _supportedInterfaces[bytes4(0x0b1fd263)] = true;    // TIP-3.2
        _supportedInterfaces[bytes4(0x18f7cce4)] = true;    // IBurnableByRootTokenRoot

        // TIP-4
        _manager = _collection;
    }
}
